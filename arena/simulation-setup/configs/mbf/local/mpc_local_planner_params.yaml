controllers:
  - name: MpcLocalPlannerROS
    type: mpc_local_planner/MpcLocalPlannerROS

controller_frequency: 10.0  #5
controller_patience: 15.0
planner_frequency: 0.0  # 1 # 规划器更新频率，设为0表示只在需要时更新

MpcLocalPlannerROS:
  odom_topic: odom
  grid:
    grid_size_ref: 20
    dt_ref: 0.3
    xf_fixed:
    - false
    - false
    - false
    warm_start: true
    collocation_method: forward_differences
    cost_integration_method: left_sum
    variable_grid:
      enable: true
      min_dt: 0.0;
      max_dt: 10.0;
      grid_adaptation:
        enable: true
        dt_hyst_ratio: 0.1
        min_grid_size: 2
        max_grid_size: 50
  planning:
    objective:
      quadratic_form: 
  # 该参数表示MPC目标函数中的二次项系数矩阵，用于设置不同状态量和控制量的权重。
  # 可以通过逐步调节权重系数，来平衡机器人的控制目标和约束条件，并使机器人趋于行驶更加稳定和快速。
        state_weights:
        - 2.0
        - 2.0
        - 0.25
        control_weights:
# control_weights 表示对机器人控制输入的权重设置，包括 v 和 w 两个控制量。
# 可以尝试增大 v 的权重，以使机器人在直线行驶时速度更快。
# 同时，为了防止机器人出现剧烈震荡，需要适当增大 w 的权重。
        - 0.6   # 0.1
        - 0.4  # 0.05
        integral_form: false
      minimum_time_via_points: {}
    terminal_cost:
      quadratic:
        final_state_weights:
        - 10.0
        - 10.0
        - 0.5
    terminal_constraint:
      l2_ball:
        weight_matrix:
        - 1.0
        - 1.0
        - 1.0
        radius: 5
  controller:
    outer_ocp_iterations: 1
    xy_goal_tolerance: 0.2
    yaw_goal_tolerance: 0.1
    global_plan_overwrite_orientation: true
    global_plan_prune_distance: 1.0
    allow_init_with_backward_motion: true
    max_global_plan_lookahead_dist: 1.0
    force_reinit_new_goal_dist: 1.0
    force_reinit_new_goal_angular: 1.57
    force_reinit_num_steps: 0
    prefer_x_feedback: false
    publish_ocp_results: false
  solver:
  # solver.ipopt.iterations 和 solver.lsq_lm.iterations：
  # 这两个参数分别控制了 IPOPT 和 LSQ-LM 等求解器的最大迭代次数，
  # 在保证求解精度的前提下，可以适当增加迭代次数，以提高求解速度和优化效果。
    ipopt:
      iterations: 100
      max_cpu_time: -1.0
      ipopt_numeric_options:
        tol: 1e-4
      ipopt_string_options:
        linear_solver: mumps
        hessian_approximation: exact
    lsq_lm:
      iterations: 100
      weight_init_eq: 2
      weight_init_ineq: 2
      weight_init_bounds: 2
      weight_adapt_factor_eq: 1.5
      weight_adapt_factor_ineq: 1.5
      weight_adapt_factor_bounds: 1.5
      weight_adapt_max_eq: 500
      weight_adapt_max_ineq: 500
      weight_adapt_max_bounds: 500
  collision_avoidance: {}
