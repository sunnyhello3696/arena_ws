# file from dingo_control/config/control_diff.yaml
dingo_joint_publisher:
  type: "joint_state_controller/JointStateController"
  publish_rate: 50

dingo_velocity_controller:
  type: "diff_drive_controller/DiffDriveController"
  left_wheel: 'left_wheel'
  right_wheel: 'right_wheel'
  publish_rate: 50
  pose_covariance_diagonal: [0.001, 0.001, 1000000.0, 1000000.0, 1000000.0, 0.03]
  twist_covariance_diagonal: [0.001, 0.001, 0.001, 1000000.0, 1000000.0, 0.03]
  cmd_vel_timeout: 0.25

  odom_frame_id: "odom"
  base_frame_id: "base_link"
  k_l: 0.1
  k_r: 0.1

  # Odometry fused with IMU is published by robot_localization, so
  # no need to publish a TF based on encoders alone.
  enable_odom_tf: false

  # Wheel separation and radius multipliers
  wheel_separation_multiplier: 1.0 # default: 1.0
  wheel_radius_multiplier    : 1.0 # default: 1.0

  # Velocity and acceleration limits
  # Whenever a min_* is unspecified, default to -max_*
  # TODO: measure on actual vehicle: how?
  linear:
    x:
      has_velocity_limits    : true
      max_velocity           : 1.3   # m/s
      has_acceleration_limits: true
      max_acceleration       : 1.0   # m/s^2
  # TODO: measure on actual vehicle: how?
  angular:
    z:
      has_velocity_limits    : true
      max_velocity           : 4.0   # rad/s
      has_acceleration_limits: true
      max_acceleration       : 2.0   # rad/s^2


# ekf_localization:
  # frequency: 50
  # two_d_mode: true
  # predict_to_current_time: true

  # odom0: /dingo_velocity_controller/odom
  # odom0_config: [false, false, false,
  #               false, false, false,
  #               true, true, false,
  #               false, false, true,
  #               false, false, false]
  # odom0_differential: false
  # imu0: /imu/data
  # imu0_config: [false, false, false,
  #               false, false, false,
  #               false, false, false,
  #               false, false, true,
  #               false, false, false]
  # imu0_differential: false
  # odom_frame: odom
  # base_link_frame: base_link
  # world_frame: odom#   frequency: 50
